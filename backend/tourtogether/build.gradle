buildscript{
    dependencies {
        //이클립스인 경우를 위한 QueryDSL 플러그인. IntelliJ는 불필요. [시작]
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
        //[끝] 
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // swagger 3.0부터는 boot-starter 하나로 통합해서 사용 가능
    // https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:11.0.2'

    // 패스워드 암호화를 위한 gradle 인데 소셜로그인이기 때문에 주석처리해둠
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
    // implementation 'org.springframework.security:spring-security-core:5.6.1'

    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
}

//이클립스인 경우를 위한 QueryDSL 플러그인. IntelliJ는 불필요.
apply plugin: 'com.ewerk.gradle.plugins.querydsl'

//이클립스인 경우를 위한 QueryDSL 설정. IntelliJ는 불필요. [시작]
def querydslDir = 'src/main/generated'
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}
//[끝]

test {
    useJUnitPlatform()
}